#!/bin/sh

java_vers=1.7.0_65
build=P1
arch=x86_64
# arch=i586
fallbackfont="/usr/share/fonts/TrueType/VL-PGothic-Regular.ttf"

if [ "$arch" = "x86_64" ]; then
    jarch="amd64"
    libdir="lib64"
else
    jarch="i386"
    libdir="lib"
fi
ext="txz"

java_dir=`pwd`/jdk$java_vers

if [ ! -d $java_dir ]; then
  echo "download proper jdk(Java Development Kit) form www.java.com"
  echo "(ex: jdk-7u17-linux-x64.tar.gz)and run it to install jdk in "
  echo "  the same directory ( ./jdk$java_vers)"
  exit
fi

P=`pwd`/work
if [ -d $P ]; then
  rm -rf $P && mkdir -p $P
fi

mkdir -p $P/install
mkdir -p $P/usr/share/doc/jdk-$java_vers
mkdir -p $P/usr/java
cp -a $java_dir $P/usr/java

( cd $P/usr/java ; ln -sf jdk$java_vers jdk )
( cd $P/usr/java ; mv jdk/man ../share/ )

echo "font fallback setting"
mkdir -p $P/usr/java/jdk$java_vers/jre/lib/fonts/fallback
( cd $P/usr/java/jdk$java_vers/jre/lib/fonts/fallback ; ln -sf $fallbackfont . )

pushd $P/usr/share/man
if [ -s ja ]; then
   rm ja 
fi
if [ -d ja_JP.UTF-8 ]; then
  mv ja_JP.UTF-8 ja_JP.eucJP
  pushd ja_JP.eucJP
  for mandir in * ; do
      if [ -d $mandir ]; then
	  pushd $mandir
	  for manfile in * ; do
	      check=${manfile%.gz}
	      if [ "$manfile" = "$check" ]; then  # Ìµ°µ½Ì
		  cat $manfile | nkf -e > _temp
		  mv _temp $manfile
	      else  # °µ½ÌºÑ¤ß
		  zcat $manfile | nkf -e > _temp
		  mv _temp $check
		  rm $manfile
	      fi
	  done
	  popd
      fi
   done
  popd
fi
find . -name "*.1" -exec gzip {} \; 
popd

mkdir -p $P/etc/profile.d
cat <<"EOF" > $P/etc/profile.d/jdk.csh
# JAVA variables
setenv JAVA_HOME /usr/java/jdk
if ($?PATH) then
  set path = ( $path $JAVA_HOME/bin  )
else
  set path = ( /bin /usr/bin $JAVA_HOME/bin )
endif
EOF

cat <<"EOF" > $P/etc/profile.d/jdk.sh
# JAVA variables
export JAVA_HOME=/usr/java/jdk
if [ "$PATH.x" != ".x" ]; then
    PATH=$PATH:$JAVA_HOME/bin
else
    PATH=/bin:/usr/bin:$JAVA_HOME/bin
fi
EOF

cat <<EOF > $P/install/initpkg
echo "jdk is looking for firefox"
if [ -d "/usr/$libdir/mozilla/plugins" ]; then
  echo "linking jdk plugin into /usr/$libdir/mozillax/plugins/"
  ( cd /usr/${libdir}/mozilla/plugins ; ln -sf /usr/java/jdk/jre/lib/${jarch}/libnpjp2.so libnpjp2.so )
fi
EOF

cp $0 $P/usr/share/doc/jdk-$java_vers/$0

cd $P
chk_me=`whoami | grep root`
if [ "$chk_me.x" != ".x" ]; then
    chown -R root.root *
fi
/sbin/makepkg ../jdk-"$java_vers"-$arch-$build.$ext
